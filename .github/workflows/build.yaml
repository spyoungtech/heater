name: Build Rust on Multiple Platforms

on: [push, pull_request]

jobs:
  build-linux:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with Cross
        run: |
          cross build --release --target ${{ matrix.target }}

      - name: move artifact
        run: |
          mkdir dist
          mkdir dist/${{ matrix.target }}
          mv target/${{ matrix.target }}/release/heater dist/${{ matrix.target }}/heater

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-linux-${{ matrix.target }}-release
          path: dist/


  build-windows:
    name: Build Windows Binaries
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: move artifact
        run: |
          mkdir dist
          mkdir dist/x86_64-pc-windows-msvc
          mv target/x86_64-pc-windows-msvc/release/heater.exe dist/x86_64-pc-windows-msvc/heater.exe
          

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-windows-x86_64-pc-windows-msvc-release
          path: dist/

  build-macos:
    name: Build macOS Binaries
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Additional Targets
        if: ${{ matrix.target == 'x86_64-apple-darwin' }}
        run: rustup target add x86_64-apple-darwin

      - name: Build macOS
        run: cargo build --release --target ${{ matrix.target }}

      - name: move artifact
        run: |
          mkdir dist
          mkdir dist/${{ matrix.target }}
          mv target/${{ matrix.target }}/release/heater dist/${{ matrix.target }}/heater

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-macos-${{ matrix.target }}-release
          path: dist/

  release:
    needs: [build-macos, build-windows, build-linux]
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:

      - name: get dist artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist
      - name: zip_artifacts
        run: |
          mkdir out
          for dirname in dist/*; do
            echo "checking $dirname"
            foldername=$(basename "$dirname")
            echo "zipping $dirname to out/${foldername}.zip"
            zip -j "out/${foldername}.zip" "$dirname"/*
          done

      - name: Release GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Build Rust on Multiple Platforms

on: [push, pull_request]

jobs:
  build-linux:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with Cross
        run: |
          cross build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-linux-${{ matrix.target }}-release
          path: target/${{ matrix.target }}/release/

  build-windows:
    name: Build Windows Binaries
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-windows-x86_64-pc-windows-msvc-release
          path: target/x86_64-pc-windows-msvc/release/

  build-macos:
    name: Build macOS Binaries
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Additional Targets
        if: ${{ matrix.target == 'x86_64-apple-darwin' }}
        run: rustup target add x86_64-apple-darwin

      - name: Build macOS
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-macos-${{ matrix.target }}-release
          path: target/${{ matrix.target }}/release/

  release:
    needs: [test-builds-arch, test-builds-os, build-sdist]
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:

      - name: get dist artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binary-*
          merge-multiple: true
          path: target

      - name: Release GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}